<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Problem - View/Edit Submission</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/css/styles.css">
    <link rel="stylesheet" href="/assets/css/footer.css">
    <link rel="stylesheet" href="/assets/css/header.css">
    <style>
        #main-div {
            padding-top: 50px;
            padding-bottom: 50px;
        }

        .title-bar {
            padding: 10px;
            font-size: 18px;
            font-weight: bold;
            text-align: center;
        }

        /* Problem Details Table */
        .problem-details-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .problem-details-table th,
        .problem-details-table td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: left;
        }

        .problem-details-table th {
            background-color: #f0f0f0;
        }

        /* Input Data Table */
        .input-data-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .input-data-table th,
        .input-data-table td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: left;
        }

        .input-data-table th {
            background-color: #f0f0f0;
        }

        /* Actions and template buttons */
        .template-btns {
            display: flex;
            justify-content: space-around;
            gap: 5px;
        }

        /* Result chart */
        .result-chart {
            width: 100%;
            height: 150px;
            border: 1px solid #ccc;
            margin-top: 10px;
        }

        /* Upload box */
        .upload-box {
            width: 100%;
            height: 150px;
            border: 1px dashed #ccc;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 10px;
            background-color: #f9f9f9;
        }

        .upload-box:hover {
            background-color: #e9e9e9;
        }

        /* Buttons */
        .btn-section {
            text-align: right;
            margin-top: 20px;
        }

        .btn-section button {
            margin-left: 10px;
        }
    </style>
</head>

<body>
<!-- Header -->
<header>
    <div class="container">
        <img id="small_logo" src="/assets/img/small_logo.png" alt="solveME logo" class="img-fluid">
        <p>System info: date/time, health, etc.</p>
    </div>
</header>

<div id="main-div" class="container">
    <!-- Title Bar -->
    <div class="title-bar">
        <h3>Problem Submission Management</h3>
    </div>

    <!-- Problem Details Section -->
    <div class="problem-details-section">
        <h4>Problem Details</h4>
        <table class="problem-details-table">
            <thead>
            <tr>
                <th>Detail Name</th>
                <th>Type</th>
                <th>Value</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>Scenario ID</td>
                <td>String</td>
                <td>12345</td>
                <td>Unique scenario identifier</td>
            </tr>
            <tr>
                <td>Solver ID</td>
                <td>String</td>
                <td>solver_001</td>
                <td>The solver used for this problem</td>
            </tr>
            <!-- Add more problem details as needed -->
            </tbody>
        </table>
    </div>

    <!-- Input Data Section -->
    <div class="input-data-section">
        <h4>Input Data</h4>
        <table class="input-data-table">
            <thead>
            <tr>
                <th>Dataset ID</th>
                <th>Uploaded</th>
                <th>Visualization</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>Dataset 1</td>
                <td>Yes</td>
                <td>
                    <div class="result-chart"></div>
                </td>
                <td class="template-btns">
                    <button class="btn btn-sm btn-primary">Template</button>
                    <button class="btn btn-sm btn-secondary">Upload</button>
                    <button class="btn btn-sm btn-info">Download</button>
                </td>
            </tr>
            <tr>
                <td>Dataset 2</td>
                <td>No</td>
                <td>
                    <div class="upload-box">Drag file to upload</div>
                </td>
                <td class="template-btns">
                    <button class="btn btn-sm btn-primary">Template</button>
                    <button class="btn btn-sm btn-secondary">Upload</button>
                </td>
            </tr>
            </tbody>
        </table>
    </div>

    <!-- Button Section -->
    <div class="btn-section">
        <button class="btn btn-success">Done</button>
        <button class="btn btn-secondary">Return</button>
    </div>

    <div id="executionUpdates"></div>
</div>

<!-- Footer -->
<footer class="footer-basic">
    <div class="container text-center">
        <ul class="list-inline">
            <li class="list-inline-item"><a href="/">Home</a></li>
            <li class="list-inline-item"><a href="/credits/">Credits</a></li>
            <li class="list-inline-item"><a href="/problems/">Submit</a></li>
            <li class="list-inline-item"><a href="/problems/show">Submissions</a></li>
        </ul>
        <p class="copyright">Company Name Â© 2021</p>
    </div>
</footer>

<script>
    // Polling for execution status every 5 seconds
    const executionId = '<%= executionId %>';

    function checkExecutionStatus() {
        fetch(`/problems/manage/${executionId}/status`)
            .then(response => response.json())
            .then(data => {
                console.log('Execution status:', data.status);
                document.getElementById('status').textContent = data.status;

                // Update result if execution is completed
                if (data.status === 'completed' && data.result) {
                    document.getElementById('executionUpdates').innerHTML += `<p>Execution Completed: ${JSON.stringify(data.result)}</p>`;
                    clearInterval(pollingInterval);
                }

                // Handle failure
                if (data.status === 'failed') {
                    document.getElementById('executionUpdates').innerHTML += `<p>Execution Failed: ${data.error}</p>`;
                    clearInterval(pollingInterval);
                }
            })
            .catch(error => {
                console.error('Error fetching execution status:', error);
            });
    }

    const pollingInterval = setInterval(checkExecutionStatus, 5000);
</script>
</body>

</html>
